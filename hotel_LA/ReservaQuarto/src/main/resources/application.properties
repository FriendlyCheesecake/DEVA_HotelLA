server.servlet.context-path=/
server.port=9081
server.compression.mime-types=application/json
spring.main.allow-bean-definition-overriding=true
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:reservaQuarto;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE;
spring.datasource.username=user123
spring.datasource.password=pwd1234
spring.sql.init.platform=h2
spring.sql.init.continue-on-error=true
spring.application.name=reservaQuarto-ms
spring.jpa.open-in-view=false
spring.jpa.show-sql=true
spring.jpa.format-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.cache.type=redis
spring.jpa.redis.host=localhost
spring.jpa.redis.port=6379
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=passw123
spring.rabbitmq.cache.connection.mode=CONNECTION
spring.rabbitmq.cache.channel.size=50
spring.rabbitmq.cache.channel.checkout-timeout=10000
spring.kafka.consumer.bootstrap-servers=127.0.0.1:29092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=br.com.ada.hotelLA.reservaQuarto.config.ReservaQuartoDeserializer
spring.kafka.consumer.group-id=group_id
application.async.corePoolSize=20
application.async.maxPoolSize=40
application.async.queueCapacity=60
application.locale.country=BR
application.locale.language=pt
info.app.name=${spring.application.name}
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=scheduledtasks, heapdump, mappings, env, flyway, configprops, shutdown
management.endpoint.health.show-details=always
logging.level.org.apache=WARN
logging.level.root=info
business.mensagem.entrada.pagamento_reserva=reserva_quarto-topic
business.message.queue.realizar_pagamento_fornecedor=realizar_reserva_quarto
